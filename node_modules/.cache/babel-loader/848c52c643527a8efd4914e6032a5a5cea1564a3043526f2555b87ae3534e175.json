{"ast":null,"code":"var _jsxFileName = \"D:\\\\mendelu z\\xE1znamy\\\\Master\\\\4.semestr\\\\DA\\\\Projekt\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport FactForm from './components/FactForm';\nimport FactResult from './components/FactResult';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\n\n// Inicializace Gemini API\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY || '');\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fact, setFact] = useState(null);\n  const handleSubmit = async request => {\n    setIsLoading(true);\n    try {\n      // Získání modelu\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-pro\"\n      });\n\n      // Generování odpovědi\n      const result = await model.generateContent({\n        contents: [{\n          role: \"user\",\n          parts: [{\n            text: `Generuj historický fakt na téma: ${request.category} v zemi ${request.country} v časovém období ${request.timeFrame}. Odpověď by měla být v češtině a obsahovat zajímavé detaily.`\n          }]\n        }]\n      });\n      const response = await result.response;\n      const generatedText = response.text();\n\n      // Vytvoření odpovědi ve správném formátu\n      const mockResponse = {\n        title: `${request.category} - ${request.country}`,\n        description: generatedText,\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Proclamation_of_Czechoslovak_Independence_in_1918.jpg/1200px-Proclamation_of_Czechoslovak_Independence_in_1918.jpg',\n        date: new Date().toLocaleDateString('cs-CZ')\n      };\n      setFact(mockResponse);\n    } catch (error) {\n      console.error('Chyba při generování odpovědi:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(FactForm, {\n        onSubmit: handleSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), fact && /*#__PURE__*/_jsxDEV(FactResult, {\n        fact: fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eT7s8wCru9aDHs/uYai0Ta04fFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","CssBaseline","FactForm","FactResult","GoogleGenerativeAI","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","genAI","process","env","REACT_APP_GEMINI_API_KEY","App","_s","isLoading","setIsLoading","fact","setFact","handleSubmit","request","model","getGenerativeModel","result","generateContent","contents","role","parts","text","category","country","timeFrame","response","generatedText","mockResponse","title","description","imageUrl","date","Date","toLocaleDateString","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_c","$RefreshReg$"],"sources":["D:/mendelu záznamy/Master/4.semestr/DA/Projekt/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { Container, CssBaseline, Box, Typography, TextField, Button, CircularProgress, Paper } from '@mui/material';\r\nimport FactForm from './components/FactForm';\r\nimport FactResult from './components/FactResult';\r\nimport { FactRequest, FactResponse } from './types';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e',\r\n    },\r\n  },\r\n});\r\n\r\n// Inicializace Gemini API\r\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY || '');\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fact, setFact] = useState<FactResponse | null>(null);\r\n\r\n  const handleSubmit = async (request: FactRequest) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Získání modelu\r\n      const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\r\n\r\n      // Generování odpovědi\r\n      const result = await model.generateContent({\r\n        contents: [{\r\n          role: \"user\",\r\n          parts: [{\r\n            text: `Generuj historický fakt na téma: ${request.category} v zemi ${request.country} v časovém období ${request.timeFrame}. Odpověď by měla být v češtině a obsahovat zajímavé detaily.`\r\n          }]\r\n        }]\r\n      });\r\n      \r\n      const response = await result.response;\r\n      const generatedText = response.text();\r\n\r\n      // Vytvoření odpovědi ve správném formátu\r\n      const mockResponse: FactResponse = {\r\n        title: `${request.category} - ${request.country}`,\r\n        description: generatedText,\r\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Proclamation_of_Czechoslovak_Independence_in_1918.jpg/1200px-Proclamation_of_Czechoslovak_Independence_in_1918.jpg',\r\n        date: new Date().toLocaleDateString('cs-CZ')\r\n      };\r\n\r\n      setFact(mockResponse);\r\n    } catch (error) {\r\n      console.error('Chyba při generování odpovědi:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div className=\"App\">\r\n        <FactForm onSubmit={handleSubmit} isLoading={isLoading} />\r\n        {fact && <FactResult fact={fact} />}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}